#!/bin/bash

RED_BG=$'\e[41m'
GREEN_BG=$'\e[42m'
BLUE_TXT=$'\e[36m'
RED_TXT=$'\e[31m'
CLR=$'\e[0m'

printf "\n\t${BLUE_TXT}Starting pre-commit ESLint JS/JSX validation script${CLR}\n"

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")

if [[ "${STAGED_FILES}" == "" ]]; then
  printf "\n\t${BLUE_TXT}No JS or JSX files are currently staged${CLR}\n"
  printf "\n\t${GREEN_BG}COMMIT VALIDATED${CLR}\n"
  echo
  exit 0
fi

PASS=true
FILES_TO_FIX=()

for FILE in ${STAGED_FILES}; do
  npx eslint ${FILE}
  if [[ "$?" == 0 ]]; then
    printf "\t${GREEN_BG}ESLint Passed: ${FILE} ${CLR}\n"
  else
    printf "\t${RED_BG}ESLint Failed: ${FILE} ${CLR}\n"
    FILES_TO_FIX+=("${FILE}")
    PASS=false
  fi
done

printf "\n\n\t${BLUE_TXT}Javascript validation completed!${CLR}\n"

if ! ${PASS}; then
  printf "\n\t${RED_BG}COMMIT FAILED:${CLR} Your commit contains files that makes ESLint grumpy.\n\tPlease correct these following files:\n\n"
  for FILE in ${FILES_TO_FIX[@]}; do
    printf "\t> ${RED_TXT}${FILE}${CLR}\n"
  done
  echo
  exit 1
else
  printf "\n\t${GREEN_BG}COMMIT VALIDATED${CLR}\n"
  echo
fi

exit $?
